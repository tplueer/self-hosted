version: "3.8"

services:
  # MongoDB database
  database:
    image: mongo
    restart: always
    volumes:
      - ./data/db:/data/db

  # Redis server
  redis:
    image: eqalpha/keydb
    restart: always

  # S3-compatible storage server
  minio:
    image: minio/minio
    command: server /data
    env_file: .env
    volumes:
      - ./data/minio:/data
    restart: always

  # Caddy web server
  caddy:
    image: caddy
    restart: always
    ports:
      - 80
      - 443
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./data/caddy-data:/data
      - ./data/caddy-config:/config

  # API server (delta)
  api:
    image: ghcr.io/revoltchat/server:latest
    depends_on:
      - database
      - redis
      - caddy
    restart: always

  # Events service (quark)
  events:
    image: ghcr.io/revoltchat/bonfire:latest
    depends_on:
      - database
      - redis
      - caddy
    restart: always

  # Web App (revite)
  web:
    image: ghcr.io/revoltchat/client:master
    depends_on:
      - caddy
    restart: always

  # File server (autumn)
  autumn:
    image: ghcr.io/revoltchat/autumn:latest
    depends_on:
      - database
      - createbuckets
      - caddy
    environment:
      - AUTUMN_MONGO_URI=mongodb://database
    restart: always

  # Metadata and image proxy (january)
  january:
    image: ghcr.io/revoltchat/january:latest
    depends_on:
      - caddy
    restart: always

  # Create buckets for minio.
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add minio http://minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD;
      while ! /usr/bin/mc ready minio; do echo 'Waiting minio...' && sleep 1; done;
      /usr/bin/mc mb minio/attachments;
      /usr/bin/mc mb minio/avatars;
      /usr/bin/mc mb minio/backgrounds;
      /usr/bin/mc mb minio/icons;
      /usr/bin/mc mb minio/banners;
      /usr/bin/mc mb minio/emojis;
      exit 0;
      "
